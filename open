#!/usr/bin/python3
import sys, os, pickle, logging, traceback, requests, pyotp
from getpass import getpass
from bs4 import BeautifulSoup
from store_safely import password_decrypt

"""
Usage: DON'T RUN THIS FILE!

Generate the config file first and then use

./jump-cli

that will loop forever generating new key files every 2 hours :)

"""


os.makedirs("logs", exist_ok=True)
logging.basicConfig(
    filename="logs/jump-cli.log",
    filemode="w",
    format="%(asctime)s,%(msecs)d %(levelname)s %(message)s",
    datefmt="%H:%M:%S",
    level=logging.DEBUG,
)

logging.info("Jump!")

try:

    if not os.path.exists("config/info.cfg"):
        raise RuntimeError("No config file, run gen_config.py")


    with open("config/info.cfg") as f:
        config_pass = os.environ.get("JCLI_CONFIG_PASS", "")
        if config_pass == "":
            logging.warning("No config file password!")

        info = pickle.loads(password_decrypt(f.read(), config_pass))

    USERNAME = info["user"]
    PASSWORD = info["pass"]
    SECRET = info["secret"]

    URL = sys.argv[1]
    if URL == '-a'
        URL = sys.argv[3]

    s = requests.session()
    r = s.get(URL)

    bs = BeautifulSoup(r.content)
    f = bs.find("form", {"id": "kc-form-login"})
    url = f.attrs["action"]

    r = s.post(url, {"username": USERNAME, "password": PASSWORD, "credentialId": ""})

    bs = BeautifulSoup(r.content)
    f = bs.find("form", {"id": "kc-otp-login-form"})
    url = f.attrs["action"]

    # get one time code
    totp = pyotp.TOTP(SECRET)

    r = s.post(url, {"otp": totp.now(), "login": "Sign+In"})

    s.close()


except Exception as e:
    logging.error(traceback.format_exc())
    sys.exit(1)
